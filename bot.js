// bot.js
const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token); // –£–±–∏—Ä–∞–µ–º polling

bot.setWebHook(`${process.env.BASE_URL}/bot${token}`);

// –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ "—á–æ–∫–Ω—É–ª–∏—Å—å"
const waitingUsers = []; // [{ id, username, contact }]

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –±–æ–Ω—É—Å–æ–≤ (–≤ –ø–∞–º—è—Ç–∏)
const users = {}; // user_id: { bonuses: 0, contacts: [] }

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(chatId, 'üç∫ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Efes Club! –û—Ç–∫—Ä–æ–π —Å–≤–æ—é –∫–∞—Ä—Ç—É:', {
    reply_markup: {
      inline_keyboard: [[
        {
          text: 'üéâ –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É',
          web_app: {
            url: 'https://efes-app.vercel.app/' // —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ—é –º–∏–Ω–∏-–∞–ø–ø—É
          }
        }
      ]]
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App (–≤—Å—Ç—Ä—è—Å–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞)
bot.on('web_app_data', (msg) => {
  const userId = msg.from.id;
  const username = msg.from.username || `user_${userId}`;
  let data = {};

  try {
    data = JSON.parse(msg.web_app_data.data);
  } catch (e) {
    return bot.sendMessage(userId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.');
  }

  if (!data.contact) return;

  const user = {
    id: userId,
    username,
    contact: data.contact
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥—å
  waitingUsers.push(user);

  // –ò—â–µ–º –ø–∞—Ä—É
  if (waitingUsers.length >= 2) {
    const [first, second] = waitingUsers.splice(0, 2);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    if (!users[first.id]) users[first.id] = { bonuses: 0, contacts: [] };
    if (!users[second.id]) users[second.id] = { bonuses: 0, contacts: [] };

    // –û–±–º–µ–Ω –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
    if (!users[first.id].contacts.includes(second.contact)) {
      users[first.id].contacts.push(second.contact);
      users[first.id].bonuses += 1;
    }

    if (!users[second.id].contacts.includes(first.contact)) {
      users[second.id].contacts.push(first.contact);
      users[second.id].bonuses += 1;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–æ–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    bot.sendMessage(first.id, `üéâ –í—ã —É—Å–ø–µ—à–Ω–æ —á–æ–∫–Ω—É–ª–∏—Å—å —Å @${second.username}!\nüí∞ –í–∞—à–∏ –±–æ–Ω—É—Å—ã: ${users[first.id].bonuses}`);
    bot.sendMessage(second.id, `üéâ –í—ã —É—Å–ø–µ—à–Ω–æ —á–æ–∫–Ω—É–ª–∏—Å—å —Å @${first.username}!\nüí∞ –í–∞—à–∏ –±–æ–Ω—É—Å—ã: ${users[second.id].bonuses}`);
  } else {
    // –ï—Å–ª–∏ –ø–æ–∫–∞ –æ–¥–∏–Ω ‚Äî –∂–¥—ë–º –≤—Ç–æ—Ä–æ–≥–æ
    bot.sendMessage(userId, '‚è≥ –û–∂–∏–¥–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è —á–æ–∫–∞...');
  }
});