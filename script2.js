// script2.js ‚Äî —É—Å—Ç–æ–π—á–∏–≤—ã–π —Å—Ç–∞—Ä—Ç –≤ Telegram Mini App + —á–æ–∫ –ø–æ –≤—Å—Ç—Ä—è—Å–∫–µ
(function () {
  // ------------- –Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Å–æ—Å—Ç–æ—è–Ω–∏–µ -------------
  const API_BASE = (window.__API_BASE__ || 'https://efes-app.onrender.com').replace(/\/+$/,'');
  const SHAKE_THRESHOLD = 15;        // —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä—è—Å–∫–∏
  const MIN_SHAKE_INTERVAL = 1500;   // –º—Å –º–µ–∂–¥—É ¬´—á–æ–∫–∞–º–∏¬ª, —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å

  let tg = null;              // Telegram.WebApp
  let telegramUser = null;    // –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ initDataUnsafe
  let hasMotionPermission = false;
  let lastShakeTime = 0;
  let lastAccel = { x: null, y: null, z: null };
  let contactStr = '';        // —á—Ç–æ —à–ª—ë–º –∫–∞–∫ "contact" –Ω–∞ –±—ç–∫

  // ------------- —É—Ç–∏–ª–∏—Ç—ã -------------
  const $ = (id) => document.getElementById(id);
  const safe = (s) => (s == null ? '' : String(s));

  const log = async (msg, extra = {}) => {
    try {
      await fetch(`${API_BASE}/debug-log`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ msg, ...extra })
      });
    } catch (_) { /* —Ç–∏—Ö–æ */ }
  };
  // === –ê–£–î–ò–û + –≠–§–§–ï–ö–¢ –û–¢–ö–†–´–¢–ò–Ø ===
let __audioPrimed = false;

function primeAudio(){
  if (__audioPrimed) return;
  ['sfx-bottle','sfx-can'].forEach(id=>{
    const el = document.getElementById(id);
    if (!el) return;
    el.volume = 0.95;
    try {
      el.play().then(()=>{ el.pause(); el.currentTime = 0; __audioPrimed = true; }).catch(()=>{});
    } catch {}
  });
}

function playOpenFx(kind='bottle'){
  // –∑–≤—É–∫
  const audio = document.getElementById(kind === 'can' ? 'sfx-can' : 'sfx-bottle');
  try { audio && (audio.currentTime = 0, audio.play()); } catch {}

  // —Ö–∞–ø—Ç–∏–∫ (–≤ –≤–µ–±–≤—å—é –¢–µ–ª–µ–≥–∏)
  window.Telegram?.WebApp?.HapticFeedback?.notificationOccurred?.('success');

  // –∞–Ω–∏–º–∞—Ü–∏–∏ (—Ä–∞–±–æ—Ç–∞—é—Ç –¥–∞–∂–µ –µ—Å–ª–∏ cap/foam –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å—Ç—è—Ç—Å—è)
  const bottle = document.getElementById('bottle');
  const cap    = document.getElementById('cap');
  const foam   = document.getElementById('foam');
  if (bottle){ bottle.classList.remove('bump'); void bottle.offsetWidth; bottle.classList.add('bump'); }

  if (cap){   cap.classList.remove('pop');   void cap.offsetWidth;   cap.classList.add('pop'); }
  if (foam){  foam.classList.remove('spray');void foam.offsetWidth;  foam.classList.add('spray'); }
}

  // ------------- –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram -------------
  const ensureTgReady = async () => {
    if (!window.Telegram || !window.Telegram.WebApp) {
      await log('No Telegram.WebApp on window');
      throw new Error('–û—Ç–∫—Ä–æ–π—Ç–µ –º–∏–Ω–∏-–∞–ø–ø –∏–∑ –±–æ—Ç–∞ Telegram');
    }
    tg = window.Telegram.WebApp;
    try { tg.ready(); } catch (_) {}
    await log('TG ready', { platform: tg.platform });
    return tg;
  };

  // ------------- –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -------------
  const getTgUser = () => {
    const u = tg?.initDataUnsafe?.user;
    return u && u.id ? u : null;
  };

  // ------------- UI –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ -------------
  const showUser = (u) => {
    const name = u.first_name || u.username || `user_${u.id}`;
    $('username') && ($('username').textContent = `${name}  #${u.id}`);
    $('status') && ($('status').textContent = '–ì–æ—Ç–æ–≤! –¢–µ–ø–µ—Ä—å –¥–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –¥–∞—Ç—á–∏–∫–∞–º –∏ –≤—Å—Ç—Ä—è—Ö–Ω–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω.');
  };

  const showOpenFromBot = () => {
    $('username') && ($('username').textContent = '–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶');
    $('status') && ($('status').textContent = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏–Ω–∏-–∞–ø–ø –∏–∑ –±–æ—Ç–∞.');
  };

  // ------------- —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä (iOS) -------------
  const ensureMotionPermission = async () => {
    if (typeof DeviceMotionEvent === 'undefined') return true;
    if (typeof DeviceMotionEvent.requestPermission !== 'function') return true;

    const st = await DeviceMotionEvent.requestPermission().catch(() => 'denied');
    hasMotionPermission = (st === 'granted');
    if (!hasMotionPermission) {
      $('status') && ($('status').textContent =
        '–†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –¥–≤–∏–∂–µ–Ω–∏—é/–∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä—É (–Ω–∞–∂–º–∏—Ç–µ "–ß–æ–∫!" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –†–∞–∑—Ä–µ—à–∏—Ç—å).');
      throw new Error('motion permission denied');
    }
    return true;
  };

  // ------------- –∞–Ω–∏–º–∞—Ü–∏—è –±—É—Ç—ã–ª–∫–∏ -------------
  const animateBottle = () => {
    const img = $('bottle');
    if (!img) return;
    img.style.transition = 'transform 0.2s ease';
    img.style.transform = 'rotate(15deg) scale(1.05)';
    setTimeout(() => { img.style.transform = 'rotate(-10deg)'; }, 200);
    setTimeout(() => { img.style.transform = 'rotate(0deg) scale(1)'; }, 400);
  };

  // ------------- –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –±–æ—Ç—É (1 —Ä–∞–∑) -------------
  const sendContactToBot = () => {
    // @username –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ first_name#id
    contactStr = telegramUser.username
      ? `@${telegramUser.username}`
      : `${telegramUser.first_name || 'user'}#${telegramUser.id}`;

    try {
      tg.sendData(JSON.stringify({ contact: contactStr }));
      log('sendData sent', { contact: contactStr });
    } catch (e) {
      log('sendData error', { err: safe(e?.message) });
    }
  };

  // ------------- –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–æ–∫–∞ –Ω–∞ backend -------------
 const sendShake = async () => {
  const now = Date.now();
  if (now - lastShakeTime < MIN_SHAKE_INTERVAL) return;
  lastShakeTime = now;

  animateBottle();
  $('status') && ($('status').textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–æ–∫‚Ä¶');

  const name = telegramUser.first_name || telegramUser.username || `user_${telegramUser.id}`;
  const body = { telegramId: telegramUser.id, name, contact: contactStr || name };

  try {
    const r = await fetch(`${API_BASE}/shake`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(body)
    });
    const data = await r.json().catch(() => ({}));
    await log('shake resp', { ok: r.ok, data });

    if (!r.ok) {
      $('status') && ($('status').textContent = safe(data.message) || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
      return;
    }

    $('status') && ($('status').textContent = data.message || '–ß–æ–∫ –∑–∞—Å—á–∏—Ç–∞–Ω!');
    const scoreEl = $('score');
    if (scoreEl && typeof data.bonus === 'number') {
      // —É —Ç–µ–±—è —É—á—ë—Ç –æ—á–∫–æ–≤ –Ω–∞ –±—ç–∫–µ; –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ
      scoreEl.textContent = String((+scoreEl.textContent || 0) + data.bonus);
    }
    if (data.youGot) {
      $('partner') && ($('partner').textContent = `–°–æ–±–µ—Å–µ–¥–Ω–∏–∫: ${data.youGot}`);
    }

    // üîä‚ú® —ç—Ñ—Ñ–µ–∫—Ç (–∑–≤—É–∫ + –º–∏–Ω–∏-–∞–Ω–∏–º–∞—Ü–∏—è)
    playOpenFx('bottle'); // ‚Üê –¥–æ–±–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

  } catch (e) {
    await log('shake fetch error', { err: safe(e?.message) });
    $('status') && ($('status').textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–æ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.');
  }
};
// === –ê–£–î–ò–û + –≠–§–§–ï–ö–¢ –û–¢–ö–†–´–¢–ò–Ø ===
let __audioPrimed = false;

function primeAudio(){
  if (__audioPrimed) return;
  ['sfx-bottle','sfx-can'].forEach(id=>{
    const el = document.getElementById(id);
    if (!el) return;
    el.volume = 0.95;
    try {
      el.play().then(()=>{ el.pause(); el.currentTime = 0; __audioPrimed = true; }).catch(()=>{});
    } catch {}
  });
}

function playOpenFx(kind='bottle'){
  // –∑–≤—É–∫
  const audio = document.getElementById(kind === 'can' ? 'sfx-can' : 'sfx-bottle');
  try { audio && (audio.currentTime = 0, audio.play()); } catch {}

  // —Ö–∞–ø—Ç–∏–∫
  window.Telegram?.WebApp?.HapticFeedback?.notificationOccurred?.('success');

  // –ª—ë–≥–∫–∞—è –∞–Ω–∏–º–∞—Ü–∏—è (—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç cap/foam)
  const bottle = document.getElementById('bottle');
  const cap    = document.getElementById('cap');
  const foam   = document.getElementById('foam');
  if (bottle){ bottle.classList.remove('bump'); void bottle.offsetWidth; bottle.classList.add('bump'); }
  if (cap){    cap.classList.remove('pop');     void cap.offsetWidth;    cap.classList.add('pop'); }
  if (foam){   foam.classList.remove('spray');  void foam.offsetWidth;   foam.classList.add('spray'); }
}
  // ------------- –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è (–≤—Å—Ç—Ä—è—Å–∫–∞) -------------
  const onMotion = (ev) => {
    const a = ev.accelerationIncludingGravity || ev.acceleration;
    if (!a) return;

    const dx = (lastAccel.x == null ? 0 : Math.abs(a.x - lastAccel.x));
    const dy = (lastAccel.y == null ? 0 : Math.abs(a.y - lastAccel.y));
    const dz = (lastAccel.z == null ? 0 : Math.abs(a.z - lastAccel.z));
    lastAccel = { x: a.x, y: a.y, z: a.z };

    const magnitude = Math.sqrt(dx * dx + dy * dy + dz * dz);
    if (magnitude > SHAKE_THRESHOLD) sendShake();
  };

  // ------------- —Å—Ç–∞—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è -------------
  window.addEventListener('DOMContentLoaded', async () => {
    try {
      await ensureTgReady();
      telegramUser = getTgUser();

      if (!telegramUser) {
        showOpenFromBot();
        return;
      }

      showUser(telegramUser);
      await log('user ok', { id: telegramUser.id });

      // –ö–Ω–æ–ø–∫–∞ ¬´–ß–æ–∫!¬ª ‚Äî –ø—Ä–æ—Å–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ + —à–ª—ë–º –∫–æ–Ω—Ç–∞–∫—Ç –±–æ—Ç—É (1 —Ä–∞–∑)
    $('shakeBtn')?.addEventListener('click', async () => {
  primeAudio();
  try {
    await ensureMotionPermission();
    if (!contactStr) sendContactToBot();
    $('status') && ($('status').textContent = '–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—Å—Ç—Ä—è—Ö–Ω–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã –≤–º–µ—Å—Ç–µ.');
  } catch (_) {
    // ...
  }
});

      // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ ‚Äî –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      window.addEventListener('devicemotion', onMotion);

    } catch (e) {
      await log('init error', { err: safe(e?.message) });
      showOpenFromBot();
    }
  });
})();